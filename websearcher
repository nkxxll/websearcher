#!/usr/bin/env python3
import argparse
from searcher import Searcher


class Args():
    def __init__(self):
        parser = argparse.ArgumentParser(
            prog='Web Searcher',
            description='Searches for specific strings on a list of sites and the context.',
        )
        parser.add_argument("querries", type=str, nargs="+", default=[], help="One or more query strings")
        parser.add_argument("-sites", metavar="SITE",
                            nargs="+", type=str, default=[])
        parser.add_argument("-file", default="", type=str)
        parser.add_argument("-range", default=100, type=int)
        self.parser = parser
        self.sites = []
        self.querries = []

    def parse(self):
        args = self.parser.parse_args()
        # only cli args for the site
        if (len(args.sites) > 0 and args.file == ""):
            self.sites += args.sites
        # only sites in the file
        if (args.sites == [] and args.file != ""):
            with open(args.file, "r") as f:
                self.sites += f.read().splitlines()
        # sites in file and on the cli
        if (len(args.sites) > 0 and args.file != ""):
            with open(args.file, "r") as f:
                self.sites += f.read().splitlines()
            self.sites += args.sites
        # no sites
        if (args.sites == [] and args.file == ""):
            self.help()
            exit(1)
        # return the query
        if args.querries == []:
            self.help()
            exit(1)
        else:
            self.querries = args.querries

        self.range = args.range
            
        return self.sites, self.querries, self.range

    def get_sites(self):
        return self.sites

    def get_querries(self):
        return self.querries

    def help(self):
        self.parser.print_help()


def main():
    parser=Args()
    parser.parse()
    # make a new searcher
    searcher=Searcher(parser.querries, parser.get_sites(), parser.range)
    # search for the query/querries
    searcher.results()
    print(searcher.pretty_print("test output"))


if __name__ == "__main__":
    main()
